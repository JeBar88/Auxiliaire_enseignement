sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
Fs(10)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^15
lam <- c(0.003, 0.004)
g <- 1
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
lamS
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
lamS
500*(lam[1] - g)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^15
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
Fs(10)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^15
lam <- c(0.003, 0.004)
g <- 0.000
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
Fs(10)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^15
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
Fs(10)
### b) Pour X1
M <- dpois(0:100, lam[1])
sum(M)
### b) Pour X1
fm <- dpois(0:100, lam[1])
Fx1 <- function(x) fm[1] + sum(fm[2:1001] * pgamma(x, a[1] + 1:1000, b))
### b) Pour X1
fm <- dpois(0:100, lam[1])
Fx1 <- function(x) sum(fm[1:1001] * pgamma(x, a[1] + 0:1000, b))
sum(fm[1:1001] * (a[1] + 0:1000)/b)
(a[1] + 0:1000)/b
fm[1:1001]
### b) Pour X1
fm <- dpois(0:2, lam[1])
Fx1 <- function(x) sum(fm[1:1001] * pgamma(x, a[1] + 0:1000, b))
sum(fm[1:1001] * (a[1] + 0:1000)/b)
fm
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:21] * pgamma(x, a[1] + 0:20, b))
sum(fm[1:21] * (a[1] + 0:20)/b)
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:21] * pgamma(x, a[1] + 0:20, b))
sum(fm[1:21] * (a[1] + 0:20)/b)
fm
lam * mgamma(1, a[1], b)
lam[1] * mgamma(1, a[1], b)
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:21] * pgamma(x, a[1] * 0:20, b))
sum(fm[1:21] * (a[1] * 0:20)/b)
lam[1] * mgamma(1, a[1], b)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 100))
FX1(100)
Fx1(100)
Fx1(200)
Fx1(1000)
### b) Pour X1
fm <- dpois(0:50, lam[1])
Fx1 <- function(x) sum(fm[1:51] * pgamma(x, a[1] * 0:50, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 100))
Fx1(1000)
Fx1(10000)
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:51] * pgamma(x, a[1] * 0:20, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 100))
Fx1(10000)
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:21] * pgamma(x, a[1] * 0:20, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 100))
Fx1(10000)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 10000))$min
Fx1(10000)
VaRX1(0.995)
Fx1(1000)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 1000))$min
VaRX1(0.995)
Fx1(0.0001848785)
Fx1(1e6)
nfft <- 2^15
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
### a)
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:21] * pgamma(x, a[1] * 0:20, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 1000))$min
VaRX1(0.995)
Fx1(1e6)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^15
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
### a)
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:21] * pgamma(x, a[1] * 0:20, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 1000))$min
VaRX1(0.995)
Fx1(1e6)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(500, 1000))$min
VaRX1(0.995)
Fx1(1e4)
Fx1(1000)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(500, 10000))$min
VaRX1(0.995)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 10000))$min
VaRX1(0.995)
Fx1(1000)
###############################
### Chapitre 3 exercice trad 24
###############################
library(Runuran)
library(actuar)
nfft <- 2^20
b <- c(0.1, 0.2, 1/(1/0.1 + 1/0.2))
a <- c(2.5, 5)
aS <- sum(a) - g
g <- 1
q <- (b/max(b))[-which.max((b/max(b)))]
j1 <- dnbinom(0:(nfft - 1), a[1] - g, q[1])
j2 <- dnbinom(0:(nfft - 1), g, q[2])
kt <- fft(j1) * fft(j2)
k <- Re(fft(kt, T))/nfft
Fs <- function(x) sum(k[1:1001] * pgamma(x, aS + 0:1000, max(b)))
### b)
E <- sum(k[1:1001] * (aS + 0:1000)/max(b))
E2 <- ((aS + 0:1000) + (aS + 0:1000)^2)/max(b)^2
Var <- sum(k[1:1001] * ((aS + 0:1000) + (aS + 0:1000)^2)/max(b)^2) - E^2
cbind(E, Var)
### c)
# Avec optimize
VaR <- function(k) optimize(function(x) abs(Fs(x) - k), c(0, 1000))$min
VaR(0.95)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 10000))
VaRX1(0.995)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^15
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
### a)
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
### b) Pour X1
fm <- dpois(0:20, lam[1])
Fx1 <- function(x) sum(fm[1:21] * pgamma(x, a[1] * 0:20, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 10000))
VaRX1(0.995)
Fx1(1000)
Fs(1000)
Fs(10000000)
Fs(1e6)
### c)
VaRS995 <- optimize(function(x) abs(Fs(x) - k), c(9e5, 1e6))
### c)
VaRS995 <- optimize(function(x) abs(Fs(x) - 0.995), c(9e5, 1e6))
Fs(1e6)
VaRS995
### c)
VaRS995 <- optimize(function(x) abs(Fs(x) - 0.995), c(9.5e5, 1e6))
### c)
optimize(function(x) abs(Fs(x) - 0.995), c(9.5e5, 1e6))
# Par interpolation
gen <- pinv.new(cdf=Fs, lb=0, ub=Inf)
# Par interpolation
gen <- pinv.new(cdf=Fx1, lb=0, ub=Inf)
VaR2(0.995)
# Par interpolation
gen <- pinv.new(cdf=Fx1, lb=0, ub=Inf)
VaR2 <- function(u) uq(gen, u)
fm
### b) Pour X1
fm <- dpois(0:10, lam[1])
Fx1 <- function(x) sum(fm[1:11] * pgamma(x, a[1] * 0:10, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 10000))
VaRX1(0.995)
Fx1(1e6)
Fx1(1e4)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 1000))
VaRX1(0.995)
gen <- pinv.new(cdf=Fx1, lb=0, ub=Inf)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(500, 1000))
VaRX1(0.995)
Fx1(400)
Fx1(1000)
Fx1(0.0018)
Fx1(32)
pgamma(34, a[1] * 0:10, b)
Fx1 <- function(x) fm[1] + sum(fm[2:11] * pgamma(x, a[1] * 1:10, b))
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(500, 1000))
VaRX1(0.995)
Fx1(32)
### c)
optimize(function(x) abs(Fs(x) - 0.995), c(9.5e5, 1e6))
Fx1(32)
Fx1(23)
Fx1(0.000000001)
Fx1(0.00000000000000000000001)
pgamma(34, a[1] * 0:10, b)
Fx1(0.00000000000000000000001)
fm[1]
VaRX1(0.998)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(500, 100000))
VaRX1(0.998)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(500, 1000000))
VaRX1(0.998)
Fx1(1e5)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 1e5))
VaRX1(0.998)
VaRX1(0.999)
Fx1(50000)
Fx1(5000)
VaRX1 <- function(k) optimize(function(x) abs(Fx1(x) - k), c(0, 5000))
VaRX1(0.999)
Fx1(2290.152)
sum(fm[1:11] * mgamma(1, a[1] * 0:10, b))
sum(fm[2:11] * mgamma(1, a[1] * 1:10, b))
fm[1]
fj[1]
Fs(2000)
Fs(5000)
Fs(10000)
Fs(100000)
Fs(500000)
Fs(50000000)
Fs(5000000000)
500*(lam[1] - g)/lamS
fk
sum(fk)
length(fk)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^120
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^20
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
### a)
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
### b) Pour X1
fm <- dpois(0:10, lam[1])
fm[1]
Fs(5000000000)
Fs <- function(x) fj[1] + sum(fj[2:10001] * pgamma(x, 1:10000, b))
### b) Pour X1
fm <- dpois(0:10, lam[1])
fm[1]
Fs(5000000000)
Fs(500000)
Fs(600000)
fj
pgamma(50, 1000, 1/1000)
pgamma(500000, 1000, 1/1000)
pgamma(500000000, 1000, 1/1000)
pgamma(5e6, 1000, 1/1000)
pgamma(4e6, 1000, 1/1000)
pgamma(e6, 1000, 1/1000)
pgamma(3e6, 1000, 1/1000)
pgamma(2e6, 1000, 1/1000)
pgamma(1e6, 1000, 1/1000)
pgamma(1.2e6, 1000, 1/1000)
pgamma(1.1e6, 1000, 1/1000)
pgamma(1000000, 1000, 1/1000)
pgamma(1000100, 1000, 1/1000)
pgamma(1001000, 1000, 1/1000)
pgamma(101000, 1000, 1/1000)
curve(function(x) Fs(x))
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
### b) Pour X1
fm <- dpois(0:10, lam[1])
fm[1]
curve(function(x) Fs(x))
Fs <- function(x) fj[1] + sum(fj[2:1001] * pgamma(x, 1:1000, b))
Fs(45)
Fs(5e5)
Fs(6e5)
Fs(7e5)
Fs(8e5)
Fs <- function(x) fj[1] + sum(fj[2:10001] * pgamma(x, 1:10000, b))
optimize(function(x) abs(Fs(x) - 0.5), c(0, 5e4))
Fs(3339.624)
optimize(function(x) abs(Fs(x) - 0.5), c(0, 5e5))
optimize(function(x) abs(Fs(x) - 0.5), c(0, 5e5))
Fs(5e5)
Fs(5.6e5)
Fs(5e6)
Fs <- function(x) fj[1] + sum(fj[2:100001] * pgamma(x, 1:100000, b))
Fs(3e3)
Fs(3e6)
Fs(4e6)
Fs(5e5)
Fs(5.6e5)
curve(Fs)
fj[1]
fj[2:100001]
optimize(function(x) abs(Fs(x) - 0.995), c(0, 5e5))
optimize(function(x) abs(Fs(x) - 0.995), c(4e5, 5e5))
optimize(function(x) abs(Fs(x) - 0.995), c(4e5, 5e5))$min
optimize(function(x) abs(Fs(x) - 0.995), c(4.5e5, 5e5))$min
Fs(30)
Fs(4e5)
Fs(2e5)
Fs(1e5)
Fs(50000)
Fs(40000)
Fs(20000)
Fs(100000)
Fs(10000)
Fs(40000)
optimize(function(x) abs(Fs(x) - 0.995), c(0, 4e4))$min
Fs(16308.19)
VaR995 <- optimize(function(x) abs(Fs(x) - 0.995), c(0, 4e4))$min
TVaR995 <- sum(fj[1:100001] * 0:100000/b * pgamma(x, 0:100000 + 1, b, low = F))
TVaR995 <- sum(fj[1:100001] * 0:100000/b * pgamma(VaR995, 0:100000 + 1, b, low = F))
TVaR995
TVaR995 <- sum(fj[1:100001] * 0:100000/b * pgamma(VaR995, 0:100000 + 1, b, low = F))/(1-0.995)
cbind(VaR995, TVaR995)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^20
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
### a)
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:10001] * pgamma(x, 1:10000, b))
### b) Pour X1
fm <- dpois(0:10, lam[1])
fm[1]
# Pr(M = 0) = 0.9970045 donc VaR à 0.995 est 0
### c)
VaR995 <- optimize(function(x) abs(Fs(x) - 0.995), c(0, 4e4))$min
TVaR995 <- sum(fj[1:100001] * 0:100000/b * pgamma(VaR995, 0:100000 + 1, b, low = F))/(1-0.995)
cbind(VaR995, TVaR995)
################################
### Chapitre 3 exercices trad 25
################################
nfft <- 2^20
lam <- c(0.003, 0.004)
g <- 0.001
lamS <- 500*(lam[1] - g) + 500*(lam[2] - g) + g
a <- c(2, 1)
b <- 1/1000
### a)
fk <- c(0, 500*(lam[1] - g)/lamS, 500*(lam[2] - g)/lamS, numeric(1497) , g/lamS, numeric(nfft - 1501))
sum(fk)
length(fk)
fjt <- exp(lamS * (fft(fk) - 1))
fj <- Re(fft(fjt, T))/nfft
Fs <- function(x) fj[1] + sum(fj[2:10001] * pgamma(x, 1:10000, b))
### b) Pour X1
fm <- dpois(0:10, lam[1])
fm[1]
# Pr(M = 0) = 0.9970045 donc VaR à 0.995 est 0
### c)
VaR995 <- optimize(function(x) abs(Fs(x) - 0.995), c(0, 4e4))$min
TVaR995 <- sum(fj[1:100001] * 0:100000/b * pgamma(VaR995, 0:100000 + 1, b, low = F))/(1-0.995)
cbind(VaR995, TVaR995)
###############################
### Chapitre 3 exercice trad 24
###############################
library(Runuran)
library(actuar)
nfft <- 2^20
b <- c(0.1, 0.2, 1/(1/0.1 + 1/0.2))
a <- c(2.5, 5)
aS <- sum(a) - g
g <- 1
q <- (b/max(b))[-which.max((b/max(b)))]
j1 <- dnbinom(0:(nfft - 1), a[1] - g, q[1])
j2 <- dnbinom(0:(nfft - 1), g, q[2])
kt <- fft(j1) * fft(j2)
k <- Re(fft(kt, T))/nfft
Fs <- function(x) sum(k[1:1001] * pgamma(x, aS + 0:1000, max(b)))
### b)
E <- sum(k[1:1001] * (aS + 0:1000)/max(b))
E2 <- ((aS + 0:1000) + (aS + 0:1000)^2)/max(b)^2
Var <- sum(k[1:1001] * ((aS + 0:1000) + (aS + 0:1000)^2)/max(b)^2) - E^2
cbind(E, Var)
### c)
# Avec optimize
VaR <- function(k) optimize(function(x) abs(Fs(x) - k), c(0, 1000))$min
VaR(0.95)
# Par interpolation
gen <- pinv.new(cdf=Fs, lb=0, ub=Inf)
VaR2 <- function(u) uq(gen, u)
TVaR <- function(u) 1/(1 - u) * sum(k[1:1001] * (aS + 0:1000)/max(b) * pgamma(VaR2(u), as + 0:1000 + 1, max(b), low = F))
TVaR(0.95)
###############################
### Chapitre 3 exercice trad 24
###############################
library(Runuran)
library(actuar)
nfft <- 2^20
b <- c(0.1, 0.2, 1/(1/0.1 + 1/0.2))
a <- c(2.5, 5)
aS <- sum(a) - g
g <- 1
q <- (b/max(b))[-which.max((b/max(b)))]
j1 <- dnbinom(0:(nfft - 1), a[1] - g, q[1])
j2 <- dnbinom(0:(nfft - 1), g, q[2])
kt <- fft(j1) * fft(j2)
k <- Re(fft(kt, T))/nfft
Fs <- function(x) sum(k[1:1001] * pgamma(x, aS + 0:1000, max(b)))
### b)
E <- sum(k[1:1001] * (aS + 0:1000)/max(b))
Var <- sum(k[1:1001] * ((aS + 0:1000) + (aS + 0:1000)^2)/max(b)^2) - E^2
cbind(E, Var)
### c)
# Avec optimize
VaR <- function(k) optimize(function(x) abs(Fs(x) - k), c(0, 1000))$min
VaR(0.95)
# Par interpolation
gen <- pinv.new(cdf=Fs, lb=0, ub=Inf)
VaR2 <- function(u) uq(gen, u)
TVaR <- function(u) 1/(1 - u) * sum(k[1:1001] * (aS + 0:1000)/max(b) * pgamma(VaR2(u), aS + 0:1000 + 1, max(b), low = F))
TVaR(0.95)
